app: elections-api
service: election-results-api

plugins:
  - serverless-python-requirements
  - serverless-wsgi

custom:
  defaultStage: dev  
  environment: ${file(./env.yml):${self:provider.stage}, file(./env.yml):default}
  tableName: electionResults
  wsgi:
    app: app.app
    pythonBin: python3
    packRequirements: false
  pythonRequirements:
    dockerizePip: non-linux

provider:
  name: aws
  runtime: python3.8
  region: eu-central-1
  stage: ${opt:stage, self:custom.defaultStage}
  apiGateway:
    shouldStartNameWithService: true
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
      Resource:
        - ${self:custom.environment.dynamodbArn}
  environment:
    USERS_TABLE: electionResults
    
functions:
  app:
    handler: wsgi_handler.handler
    events:
      - http: ANY /
      - http: 'ANY /{proxy+}'